{{- if eq .Values.secretProvider "external" }}
{{- range $name, $svc := .Values.services }}
{{- if $svc.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $.Release.Name }}-{{ $name }}-externalsecret
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: {{- if $.Values.useExistingSecretStore }}
      {{ $.Values.existingSecretStoreRef.kind }}
    {{- else }}
      {{ if eq $.Values.externalSecretScope "cluster" }}ClusterSecretStore{{ else }}SecretStore{{ end }}
    {{- end }}
    name: {{- if $.Values.useExistingSecretStore }}
      {{ $.Values.existingSecretStoreRef.name }}
    {{- else }}
      {{ $.Values.externalSecretStore | default "default-secret-store" }}
    {{- end }}
  target:
    name: {{ $.Release.Name }}-{{ $name }}-secret
  data:
    {{- range $key, $_ := $svc.secrets }}
    - secretKey: {{ $key }}
      remoteRef:
        key: {{ printf "%s/%s/%s" $.Release.Name $name $key | lower }}
    {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
